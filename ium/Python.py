# 查看对象的类型
# type() 


# 数字(Number)类型
# int (整数), 如 1, 只有一种整数类型 int，表示为长整型。
# bool (布尔), 如 True。
# float (浮点数), 如 1.23、3E-2
# complex (复数), 如 1 + 2j、 1.1 + 2.2j


# 字符串切片
# hello = "中华人民共和国"
# print(hello[2:4])

# 内置函数 len 可以用来获取字符串的长度，也是获取字符串中字符的个数
# var = '中华人民共和国'
# lenth = len(var)
# print(lenth)

# 定义函数
# def
# def interview():
#     print("把求职者带到3号会议室")
#     print("请求职者 完成答卷")
#     print("让测试经理来面试 求职者")
#     print("让技术总监面试 求职者")
# interview()# 调用函数 interview ，有时也叫做 执行函数 interview


#  函数要返回结果，就必须要使用 return 关键字，后面加上返回的结果对象
# def squarep(num1,num2):
#     ret = num1**2 + num2**2
#     return ret 
    
# ret = squarep(1,2)
# print(ret)

# 缺省值
# score


# 列表
# 如果定义列表的时候，里面就存放了一些数据对象，只需要填写到方括号里面就可以了。每个对象之间用逗号隔开
# a = [1, 2, 3.14, 'hello']

# 列表的sequence操作
# 列表每个元素的索引是从0开始的，支持正数索引，也支持负数索引
# a = [1, 2, 3.14, 'hello', [7,8,9] ]
# a[0]    # 就是 1
# a[1]    # 就是 2
# a[4]    # 就是 [7,8,9]
# a[-1]   # 也是 [7,8,9]
# a[-4]   # 也是 2
# a[-1][0]  # a[-1] 是[7,8,9],  a[-1][0] 就是 [7,8,9] 里面的第一个元素，就是 7
# 列表的切片也和字符串类似，想象用刀去切取其中的一部分，该在哪里下刀，就使用哪里的索引

# a = [1, 2, 3.14, 'hello', [7,8,9] ]
# a[0:3]      # 结果是   [1, 2, 3.14]
# a[:3]       # 结果也是 [1, 2, 3.14]
# a[3:5]      # 结果是   ['hello', [7,8,9] ]
# a[3:]       # 结果也是 ['hello', [7,8,9] ]
# a[-1][:2]   # 结果是   [7,8] 
# print(a)      
# 结果还是 [1, 2, 3.14, 'hello', [7,8,9] ] 
# 上面对a的切片操作是产生新的对象，并不会改变a指向的对象 

# 列表对象它的内容是可以变化的
# a = [1, 2, 3.14, 'hello', [7,8,9] ]
# print(a)

# a[0] = '你好'
# print(a)
# 执行上面的代码，可以发现，最后列表变量 a 的内容变成了

# ['你好', 2, 3.14, 'hello', [7, 8, 9]]


# 元祖
# tuple
# nameList = () 圆括号用来表示一个元组

# 如果元组中只有一个元素，必须要在后面加上逗号
# a = (1, )

# 定义元组还可以去掉圆括号
# a = 1, 2, 3.14, 'hello'
# 如果元组中只有一个元素，必须要在后面加上逗号
# a = 1, 


# 布尔对象
# 布尔对象只有两种取值
# True 和 False